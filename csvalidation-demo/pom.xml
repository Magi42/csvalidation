<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.vaadin.addons</groupId>
	<artifactId>csvalidation-demo</artifactId>
	<packaging>war</packaging>
	<version>0.5.5</version>
	<name>CSValidation Add-on Demo</name>

	<properties>
        <skipTests>false</skipTests>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<vaadin.version>7.4.6</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<organization>
		<name>Marko Gr√∂nroos</name>
		<url>https://github.com/Magi42/csvalidation</url>
	</organization>
    
	<scm>
		<url>git://github.com/Magi42/csvalidation.git</url>
		<connection>scm:git:git://github.com/Magi42/csvalidation.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:/Magi42/${ComponentClassName}.git</developerConnection>
		<tag>CSValidation add-on for Vaadin</tag>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/Magi42/csvalidation/issues</url>
	</issueManagement>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>vaadin-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>vaadin-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>csvalidation</artifactId>
			<version>${version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiler</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

        <!-- Requires Vaadin TestBench license -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-testbench-api</artifactId>
            <version>${vaadin.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Newer Selenium is needed because of a Firefox problem.        -->
        <!-- This also makes testing slower, so should be removed when the -->
        <!-- Problem is fixed in TestBench.                                -->
		<dependency>
		    <groupId>org.seleniumhq.selenium</groupId>
		    <artifactId>selenium-java</artifactId>
		    <version>2.45.0</version>
            <scope>test</scope>
		</dependency>

        <!-- Needed for running TestBench tests -->
        <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		
        <!-- Use Jetty for running tests -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>9.2.10.v20150310</version>
			<scope>test</scope>
		</dependency>

        <!-- Jetty likes this newer version -->
		<dependency>
		    <groupId>com.ibm.icu</groupId>
		    <artifactId>icu4j</artifactId>
		    <version>55.1</version>
		</dependency>
	</dependencies>

	<build>
	    <!-- Requires the resources plugin -->
		<resources>
		    <!-- Copy Java sources to target -->
			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.java</include>
				</includes>
			</resource>
		</resources>
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<!-- Clean-up widgetset required for "inplace" compilation -->
							<directory>${basedir}/src/main/webapp/VAADIN/widgetsets</directory>
						</fileset>
						<fileset>
							<!-- Clean-up gwt cache -->
							<directory>${basedir}/src/main/webapp/VAADIN/gwt-unitCache</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
		        <artifactId>maven-war-plugin</artifactId>
		        <version>2.3</version>
		        <configuration>
		        	<packagingExcludes>
						**/VAADIN/gwt-unitCache/**,
						**/VAADIN/widgetsets/WEB-INF/**,
						**/WEB-INF/lib/servlet-api-*.jar,
						**/WEB-INF/lib/vaadin-client-*.jar,
						**/WEB-INF/lib/jetty-*.jar,
						**/WEB-INF/lib/ant-*.jar,
						**/WEB-INF/classes/gwt-unitCache/**,
						**/WEB-INF/classes/themes/**,
						**/WEB-INF/classes/widgetsets/**
					</packagingExcludes>
					<failOnMissingWebXml>false</failOnMissingWebXml>
		        </configuration>
			</plugin>

            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>

                <executions>            
					<execution>
						<phase>test-compile</phase>
						<goals>
	       					<goal>compile</goal>
						</goals>
						<configuration>
    						<skip>${skipTests}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>

            <!-- Run JUnit tests automatically -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>                   
            </plugin>

            <!-- Run integration tests -->
		    <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<includes>
    					<include>**/*Tests.java</include>
					</includes>
					<excludes>
						<!-- Files here might match to naming conventions, but the are just
						vaadin apps containing your add-on components in various setups. We can ignore
						them from test. -->
					</excludes>
					<!--  <forkCount>10</forkCount> -->
				</configuration>
				<executions>
					<execution>
						<id>failsafe-integration-tests</id>
						<phase>integration-test</phase>
						<goals>
    						<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>failsafe-verify</id>
						<phase>verify</phase>
						<goals>
    						<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

            <!-- Needed for integration tests -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.16.v20140903</version>
				
                <configuration>
				    <webApp>
				      <contextPath>/csvalidation-demo</contextPath>
				    </webApp>
					<stopKey>STOP</stopKey>
					<stopPort>8005</stopPort>
  					<systemProperties>
					    <!-- 
						<systemProperty>
							<name>jetty.port</name>
							<value>5678</value>
						</systemProperty>
						 -->
					</systemProperties>
				</configuration>
                <executions>
                    <!-- start and stop jetty (running our app) when running integration tests -->
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
							<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<daemon>true</daemon>
							<scanIntervalSeconds>0</scanIntervalSeconds>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
    						<goal>stop</goal>
						</goals>
					</execution>
                </executions>				
			</plugin>
		</plugins>
	
		<pluginManagement>
			<plugins>
	            <plugin>
	                <groupId>com.vaadin</groupId>
	                <artifactId>vaadin-maven-plugin</artifactId>
	                <version>${vaadin.plugin.version}</version>
	
	                <configuration>
	                    <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
	                    <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets</webappDirectory>
	                    <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets</hostedWebapp>
	                    <noServer>true</noServer>
	                    <persistentunitcachedir>${basedir}/target/tmp/gwt-unitCache</persistentunitcachedir>
	                    <compileReport>true</compileReport>
	                    <module>org.vaadin.csvalidation.demo.CSValidationDemoWidgetset</module>
	                    <strict>true</strict>
	                    <runTarget>http://localhost:8080/csvalidation-demo/demo</runTarget>
	                </configuration>
	            </plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>vaadin-maven-plugin</artifactId>
										<versionRange>
											[${vaadin.plugin.version},)
										</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>update-widgetset</goal>
											<goal>compile</goal>
											<goal>update-theme</goal>
											<goal>compile-theme</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

</project>
