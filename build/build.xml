<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant"
         name="CSValidation add-on"
         basedir=".."
         default="package-jar">

    <!-- ================================================================== -->
    <!-- Configuration                                                      -->
    <!-- ================================================================== -->

    <target name="configure">
        <!-- Where project source files are located -->
        <property name="sources" value="src" />
            
        <!-- Path to root of web application folder -->
        <property name="webroot" value="WebContent" />

        <!-- Application name -->
        <property name="app-name" value="book-examples-vaadin7"/>

        <!-- Compilation work directory -->
        <property name="workdir" value="build/work"/>

    	<!-- Add-on widget set name -->
    	<property name="widgetset" value="org.vaadin.csvalidation.widgetset.CSValidationWidgetset"/>

        <!-- Add-on version -->
        <property name="version" value="0.5.4"/>

        <!-- The target name of the built add-on JAR -->
        <property name="target-jar"
            value="${workdir}/csvalidation-${version}.jar"/>
	</target>

    <!-- Widget sets to compile -->
    <target name="compile-widgetsets" depends="compile-server-side">
        <antcall target="compile-widgetset">
            <param name="widgetset" value="${widgetset}"/>
        </antcall>
    </target>

    <!-- Themes to compile -->
    <target name="compile-themes">
        <antcall target="compile-theme">
            <param name="theme" value="csvalidationtheme"/>
        </antcall>
    </target>

    <!-- ================================================================== -->
    <!-- Initialization                                                     -->
    <!-- ================================================================== -->

    <!-- Retrieve dependencies with Ivy -->
    <target name="resolve">
        <ivy:resolve file="ivy.xml" log="download-only"/>
        <ivy:cachepath pathid="ivy.deps.default" conf="default" />
        <ivy:cachepath pathid="ivy.deps.nodeploy" conf="nodeploy" />
        <ivy:cachepath pathid="ivy.deps.widgetset" conf="widgetset-compile" />
        <ivy:cachefileset setid="ivy.deps.default.fileset" conf="default"/>
    </target>

    <!-- Initialize build -->
    <target name="init" depends="configure">
        <!-- Construct and check classpath -->
        <path id="classpath.compile">
            <!-- Source code to be compiled -->
            <pathelement path="${sources}" />

            <!-- Dependencies retrieved with Ivy -->
            <path refid="ivy.deps.default"/>
            <path refid="ivy.deps.nodeploy"/>
        </path>

        <path id="classpath.widgetset">
            <!-- Source code to be compiled -->
            <pathelement path="${sources}" />
            
            <!-- Compiled server-side classes -->
            <pathelement path="${workdir}/WEB-INF/classes" />
            
            <!-- Dependencies retrieved with Ivy -->
            <path refid="ivy.deps.widgetset"/>
        </path>

        <mkdir dir="${workdir}"/>
    </target>

    <!-- ================================================================== -->
    <!-- Server-Side Compilation                                            -->
    <!-- ================================================================== -->

    <!-- Compile server-side -->
    <target name="compile-server-side"
            depends="init,resolve">
        <delete dir="${workdir}/WEB-INF/classes"/>
        <mkdir dir="${workdir}/WEB-INF/classes"/>

        <javac srcdir="${sources}"
               destdir="${workdir}/WEB-INF/classes"
        	   source="1.6"
    	       target="1.6"
               includeantruntime="no">
            <classpath>
                <path refid="classpath.compile"/>
            </classpath>
        	<compilerarg value="-Xlint:deprecation"/>
        </javac>

        <!-- Copy sources -->
        <copy todir="${workdir}/WEB-INF/classes">
            <fileset dir="${sources}"/>
        </copy>
    </target>
    
    <!-- Compile JavaDoc -->
    <target name="compile-javadoc" depends="init">
        <delete dir="${workdir}/javadoc"/>
        <mkdir dir="${workdir}/javadoc"/>

        <javadoc destdir="${workdir}/javadoc">
            <packageset dir="${sources}" defaultexcludes="yes">
              <include name="org/vaadin/csvalidation/**"/>
  	          <exclude name="org/vaadin/csvalidation/widgetset/**"/>
   	          <exclude name="org/vaadin/csvalidation/examples/**"/>
	          <exclude name="org/vaadin/csvalidation/CSValidationUI.*"/>
	          <exclude name="org/vaadin/csvalidation/CSValidationUtil.*"/>
              <exclude name="com/vaadin/**"/>
            </packageset>
        	<excludepackage name="com/vaadin/**"/>
            <classpath>
                <path refid="classpath.compile"/>
            </classpath>
        </javadoc>
    </target>

    <!-- ================================================================== -->
    <!-- Widgetset Compilation                                              -->
    <!-- ================================================================== -->

    <!-- Build the widget set. -->
    <target name="compile-widgetset" depends="init,resolve">
        <java classname="com.google.gwt.dev.Compiler"
              failonerror="yes" fork="yes">
            <arg value="-war" />
            <arg value="${webroot}/VAADIN/widgetsets" />
            <arg value="${widgetset}" />
            <arg value="-logLevel"/>
            <arg value="INFO"/>
            <!-- <arg value="-strict"/> -->
            <jvmarg value="-Xmx1024M"/>
            <jvmarg value="-Xss512M"/>
            <jvmarg value="-Djava.awt.headless=true"/>

            <classpath>
                <!-- Location of source code -->
                <pathelement path="${sources}" />

                <!-- Compiled server-side classes -->
                <pathelement path="${workdir}/WEB-INF/classes" />

                <!-- Dependencies retrieved with Ivy -->
                <path refid="ivy.deps.widgetset"/>
            </classpath>
            <sysproperty key="vFailIfNotSerializable" value="${failifnotserializable}" />
        </java>
            
        <!-- Cleanup -->
        <delete dir="${webroot}/VAADIN/gwt-unitCache"/>
        <delete dir="${webroot}/VAADIN/widgetsets/WEB-INF"/>
    </target>

    <!-- ================================================================== -->
    <!-- Theme compilation                                                  -->
    <!-- ================================================================== -->

    <!-- Compile theme -->
    <target name="compile-theme" depends="init,resolve">
        <!-- Compile theme in-place, as compilation can be used for development -->
        <java classname="com.vaadin.sass.SassCompiler"
              fork="true">
            <classpath>
                <path refid="classpath.compile"/>
            </classpath>
            <arg value="${webroot}/VAADIN/themes/${theme}/styles.scss"/> 
            <arg value="${webroot}/VAADIN/themes/${theme}/styles.css"/> 
        </java>

        <!-- Prepare work directory -->
        <delete dir="${workdir}/VAADIN/themes/${theme}"/>
        <mkdir dir="${workdir}/VAADIN/themes/${theme}"/>

        <!-- Copy theme resources -->
        <copy todir="${workdir}/VAADIN/themes/${theme}">
            <fileset dir="${webroot}/VAADIN/themes/${theme}">
                <include name="**/*"/>
                <exclude name="**/.sass-cache"/>
                <exclude name="**/.sass-cache/*"/>
                <exclude name="**/.sass-cache/**/*"/>
            </fileset>
        </copy>
    </target>

    <!-- Refresh the project in a locally running Eclipse. -->
    <target name="refresh-eclipse" if="eclipse.running">
        <echo>Refreshing project folder</echo>
        <eclipse.refreshLocal resource="CalendarTest" depth="infinite" />
    </target>

    <!-- ================================================================== -->
    <!-- Build the JAR                                                      -->
    <!-- ================================================================== -->
	<target name="package-jar"
            depends="compile-server-side, compile-javadoc">
        <echo>Building JAR ${target-jar}</echo>

        <jar jarfile="${target-jar}" compress="true">
            <!-- Manifest required by Vaadin Directory -->
            <manifest>
                <attribute name="Vaadin-Package-Version"
                           value="1" />
                <attribute name="Vaadin-Widgetsets"
                           value="${widgetset}" />
                <attribute name="Implementation-Title"
                           value="CSValidation" />
                <attribute name="Implementation-Version"
                           value="${version}" />
                <attribute name="Implementation-Vendor"
                           value="Marko GrÃ¶nroos" />
                <attribute name="Vaadin-License-Title"
                           value="Apache2" />
                <attribute name="Vaadin-License-File"
                    value="http://www.apache.org/licenses/LICENSE-2.0" />
            </manifest>
            
            <!-- Include built server-side classes -->
            <fileset dir="${workdir}/WEB-INF/classes">
                <patternset>
                    <include name="org/vaadin/csvalidation/**/*"/>
                    <exclude name="**/client/**/*"/>
                    <exclude name="**/examples/**/*"/>
                    <exclude name="**/CSValidationUI*"/>
                    <exclude name="**/CSValidationUtil*"/>
                </patternset>
            </fileset>

            <!-- Include widget set sources -->
            <fileset dir="src">
                <patternset>
                    <include name="org/vaadin/csvalidation/**/*"/>
                    <exclude name="**/examples/**/*"/>
                    <exclude name="**/CSValidationUI*"/>
                    <exclude name="**/CSValidationUtil*"/>
                </patternset>
            </fileset>

            <!-- Include JavaDoc in the JAR -->
            <fileset dir="${workdir}/javadoc"
            	     includes="**/*"/>
        </jar>
    </target>        
</project>
